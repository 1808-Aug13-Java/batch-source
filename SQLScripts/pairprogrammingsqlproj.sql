/*
- CREATE A FUNCTION WHICH CALCULATES THE \
SUBTOTAL OF A GIVEN TOTAL, IF THE TOTAL IS EQUAL 
TO THE SUBTOTAL WITH 6% TAX - USE IT TO 
RECREATE THE QUERY FROM YESTERDAY
*/
CREATE OR REPLACE FUNCTION GET_SUBTOTAL(TOTAL NUMBER)
RETURN NUMBER
IS
BEGIN
    RETURN 0.94 * TOTAL;
END;

/*
CREATE A FUNCTION WHICH TAKES IN A STRING AND A NUMBER, 
AND CONCATINATES THAT STRING THAT NUMBER OF TIMES WITH A SPACE 
BETWEEN EACH AND RETURNS THE RESULT 
    (EX. MY_FUNC('CAT',5) RETURNS 'CAT CAT CAT CAT CAT')
*/
SET SERVEROUTPUT ON;

CREATE OR REPLACE FUNCTION CONCAT_NUM(TEXT VARCHAR2, NUM_OF_TIMES NUMBER)
RETURN VARCHAR2
IS
    ADDITION_TEXT VARCHAR2(100) := TEXT;
BEGIN
    FOR i in 1..NUM_OF_TIMES-1 LOOP
        ADDITION_TEXT := ADDITION_TEXT || ' ' || TEXT;
    END LOOP;
    RETURN ADDITION_TEXT;
END;
/

BEGIN
   DBMS_OUTPUT.PUT_LINE(CONCAT_NUM('dog', 3));
END;


/*
- CREATE A STORED PROCEDURE WHICH CHECK
ALL OF THE INVOICES IN YOUR DATABASE 
AND DELETES ALL ORPHAN RECORDS IN YOUR INVOICE TABLE
*/
CREATE OR REPLACE PROCEDURE REMOVE_ORPHANS
IS
BEGIN
    DELETE FROM INVOICE
    WHERE NOT EXISTS (
        SELECT NULL
        FROM INVOICE
        WHERE INVOICE.CUSTOMERID = CUSTOMER.CUSTOMERID;
    )
END;
/

CREATE OR REPLACE PROCEDURE(


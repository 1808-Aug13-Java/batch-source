/* CHINOOK DATABASE USED AS GUIDE FOR SYNTAX */

-- remove the database if it already exists
DROP USER SUPERDANKBANK CASCADE;

-- create a new database
CREATE USER SUPERDANKBANK
IDENTIFIED BY sinhacp0Revature
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA 10M ON USERS;

-- give the table permissions
GRANT CONNECT TO SUPERDANKBANK;
GRANT RESOURCE TO SUPERDANKBANK;
GRANT CREATE SESSION TO SUPERDANKBANK;
GRANT CREATE TABLE TO SUPERDANKBANK;
GRANT CREATE VIEW TO SUPERDANKBANK;

-- connect to the database
CONN SUPERDANKBANK/sinhacp0Revature

-- create tables
CREATE TABLE SUPERDANKBANK.BANKUSER (
    BANK_USERNAME VARCHAR2(350) NOT NULL,
    BANK_PASSWORD VARCHAR2(100) NOT NULL,
    FIRSTNAME VARCHAR2(100),
    LASTNAME VARCHAR2(100),
    CONSTRAINT PK_BANKUSER PRIMARY KEY (BANK_USERNAME)
);

CREATE TABLE SUPERDANKBANK.BANKACCOUNT (
    BANKACCOUNT_ID NUMBER(9) NOT NULL,
    BANKACCOUNT_BALANCE NUMBER(38, 2) NOT NULL,
    CHECKING_OR_SAVINGS VARCHAR(8) NOT NULL,
    SINGLE_OR_JOINT VARCHAR(6),
    CONSTRAINT PK_BANKACCOUNT PRIMARY KEY (BANKACCOUNT_ID)
);

-- junction table for the many:many relationship between users and accounts
CREATE TABLE SUPERDANKBANK.BANKUSER_BANKACCOUNT (
    BANK_USERNAME VARCHAR2(350) NOT NULL,
    BANKACCOUNT_ID NUMBER(9) NOT NULL
);

CREATE TABLE SUPERDANKBANK.BANKTRANSACTION (
    TRANSACTION_ID NUMBER(38) NOT NULL,
    TRANSACTION_TIME TIMESTAMP NOT NULL,
    BANKACCOUNT_ID NUMBER(9) NOT NULL,
    BANK_USERNAME VARCHAR2(350),
    TRANSACTION_TYPE VARCHAR2(10) NOT NULL,
    BEFORE_TRANSACTION_BALANCE NUMBER(38, 2),
    AFTER_TRANSACTION_BALANCE NUMBER(38, 2),
    CONSTRAINT PK_BANKTRANSACTION PRIMARY KEY (TRANSACTION_ID)
);

-- create foreign keys
ALTER TABLE SUPERDANKBANK.BANKUSER_BANKACCOUNT
ADD CONSTRAINT FK_JUNCTION_BANKUSER_ID
FOREIGN KEY (BANK_USERNAME) 
REFERENCES SUPERDANKBANK.BANKUSER (BANK_USERNAME)
ON DELETE CASCADE;

ALTER TABLE SUPERDANKBANK.BANKUSER_BANKACCOUNT
ADD CONSTRAINT FK_JUNCTION_BANKACCOUNT_ID
FOREIGN KEY (BANKACCOUNT_ID) 
REFERENCES SUPERDANKBANK.BANKACCOUNT (BANKACCOUNT_ID)
ON DELETE CASCADE;

ALTER TABLE SUPERDANKBANK.BANKTRANSACTION
ADD CONSTRAINT FK_TRANSACTION_BANKACCOUNT_ID
FOREIGN KEY (BANKACCOUNT_ID)
REFERENCES SUPERDANKBANK.BANKACCOUNT (BANKACCOUNT_ID)
ON DELETE SET NULL;


CREATE OR REPLACE PROCEDURE GET_USER_ACCOUNTS(BU IN SUPERDANKBANK.BANKUSER.BANK_USERNAME%TYPE)
IS
S SYS_REFCURSOR;
BEGIN
    OPEN S FOR
    SELECT *
    FROM (SELECT *
    FROM SUPERDANKBANK.BANKUSER_BANKACCOUNT JUNCTION
    JOIN SUPERDANKBANK.BANKACCOUNT BANKACCOUNT
    ON JUNCTION.BANKACCOUNT_ID = BANKACCOUNT.BANKACCOUNT_ID) B
    WHERE B.BANK_USERNAME = BU;
END;

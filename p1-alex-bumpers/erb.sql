CREATE TABLE EMPLOYEES (
    EMP_ID NUMBER(5) CONSTRAINT PK_EMP_ID PRIMARY KEY,
    EMP_NAME VARCHAR2(30),
    MANAGER_ID NUMBER(5),
    POSITION VARCHAR2(25),
    EMP_USERNAME VARCHAR2(20) UNIQUE NOT NULL,
    EMP_PASSWORD VARCHAR2(20) NOT NULL,
    IS_MANAGER NUMBER(1) DEFAULT 0
);

DROP TABLE REIMBURSEMENTS;
DROP TABLE EMPLOYEES;

CREATE TABLE REIMBURSEMENTS (
    ERB_ID NUMBER(5) NOT NULL,
    ERB_AMOUNT NUMBER(5),
    ERB_STATUS VARCHAR2(10) DEFAULT 'PENDING',
    MANAGER_ID NUMBER(10),
    EMP_ID NUMBER(10)
);



INSERT INTO EMPLOYEES VALUES (1, 'Alex Bumpers', 1, 'Software Engineer', 'alex', 'pass123', 0); 
INSERT INTO EMPLOYEES VALUES (2, 'John Doe', null, 'Senior Developer', 'john', 'pass456', 1);
select * from employees;
COMMIT;
INSERT INTO REIMBURSEMENTS VALUES (1, 2000, 'PENDING', 1, 1);

CREATE SEQUENCE SQ_REIMBURSEMENTS_PK
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSEMENTS
BEFORE INSERT ON REIMBURSEMENTS
FOR EACH ROW
BEGIN
    SELECT SQ_REIMBURSEMENTS_PK.NEXTVAL INTO :NEW.ERB_ID
    FROM DUAL;
END;

COMMIT;



CREATE SEQUENCE SQ_EMPLOYEES_PK
START WITH 2
INCREMENT BY 1;


CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEES
BEFORE INSERT ON EMPLOYEES
FOR EACH ROW
BEGIN
    SELECT SQ_EMPLOYEES_PK.NEXTVAL INTO :NEW.EMP_ID
    FROM DUAL;
END;
/

SELECT * FROM EMPLOYEES;

COMMIT;

ALTER TABLE REIMBURSEMENTS
ADD CONSTRAINT FK_EMPLOYEE
FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEES ON DELETE CASCADE;